#include <bits/stdc++.h>
#define fastio ios_base::sync_with_stdio(0)
typedef long long ll;
using namespace std;

vector <pair <ll, ll> > adj[200001];
ll dijk[200001];
priority_queue <pair <ll, ll>, vector <pair <ll, ll> >, greater <pair <ll, ll> > > pq;

int main()
{
    fastio;
    cin.tie(0);
    for(ll i = 0; i < 100001; i++) dijk[i] = 1e18;
    ll v, e, k;
    cin >> v >> e >> k;
    dijk[k] = 0;
    for(ll i = 0; i < e; i++){
        ll a, b, c;
        cin >> a >> b >> c;
        adj[a].push_back({c, b});
    }
    pq.push({0, k});
    while(!pq.empty()){
        ll i = pq.top().first, j = pq.top().second;
        pq.pop();
        if(i == dijk[j]){
            for(ll l = 0; l < adj[j].size(); l++){
                if(adj[j][l].first + dijk[j] < dijk[adj[j][l].second]){
                    pq.push({adj[j][l].first + dijk[j], adj[j][l].second});
                    dijk[adj[j][l].second] = adj[j][l].first + dijk[j];
                }
            }
        }
    }
    for(ll i = 1; i <= v; i++){
        if(dijk[i] == 1e18) cout << "-1" << '\n';
        else cout << dijk[i] << '\n';
    }
    return 0;
}
