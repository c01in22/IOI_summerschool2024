#include <bits/stdc++.h>
#define fastio ios_base::sync_with_stdio(0)
typedef long long ll;
using namespace std;

ll n;
long double dp[1010][1010];
vector <pair <ll, ll> > v[1010];

long double dist(pair <ll, ll> a, pair <ll, ll> b){
    return sqrt((a.first - b.first) * (a.first - b.first) + (a.second - b.second) * (a.second - b.second));
}

long double solve(ll i, ll j){
    if(dp[i][j]) return dp[i][j];
    dp[i][j] = min(solve(i+1, j) + dist(v[i][0], v[i + 1][0]), solve(i + 1, i) + dist(v[j][0], v[i + 1][0]));
    return dp[i][j];
}

int main()
{
    fastio;
    cin.tie(0); cout.tie(0);
    for(ll i = 0; i < 1010; i++)
        for(ll j = 0; j < 1010; j++)
            dp[i][j] = 0;
    cin >> n;
    for(ll i = 1; i <= n; i++){
        ll a, b; cin >> a >> b;
        v[i].push_back({a, b});
    }
    for(ll i = 1; i <= n - 1; i++){
        dp[n - 1][i] = dist(v[n-1][0], v[n][0]) + dist(v[i][0], v[n][0]);
    }
    cout.precision(10);
    cout << solve(1, 1);
    return 0;
}

