#include <bits/stdc++.h>
#define fastio ios_base::sync_with_stdio(0)
typedef long long ll;
using namespace std;

ll m, n, k;
ll mod = 1000000009, x = 10000000;
ll fac[10000010], inv[10000010];
ll chk1[5010], arr[5010], chk2[5010], chk3[5010];
ll temp[41];

void fact(){
    fac[0] = 1;
    for(ll i=1; i<=x; i++){
        fac[i] = (fac[i-1] * i) % mod;
    }
}

void inver(){
    temp[0] = fac[x] % mod;
    for(ll i=1; i<=30; i++){
        temp[i] = (temp[i-1] * temp[i-1]) % mod;
    }
    ll cur = 0, ans = 1;
    for(ll i=30; i>=0; i--){
        if(cur + (ll)pow(2, i) <= mod - 2){
            ans =  (ans * temp[i]) % mod;
            cur += (ll)pow(2, i);
        }
    }
    inv[x] = ans;
    for(ll i=x-1; i>=0; i--){
        inv[i] = (inv[i+1] * (i+1)) % mod;
    }
}

ll nCr(ll x, ll y){
    return (((fac[x] * inv[y]) % mod) * inv[x - y]) % mod;
}

int main(){
    fastio;
    m = 1;
    fact();
    inver();
    cin >> n >> k;
    for(ll i = 1; i <= k; i++){
        cin >> arr[i];
    }
    sort(arr + 1, arr + k + 1);
    ll cur = 1, ans = 1;
    for(ll i = 1; i <= k; i++){
        chk1[arr[i]] = 1;
        ll cnt = 0;
        for(ll j = arr[i-1] + 1; j < arr[i]; j++){
            if(chk1[j] == 0) ans += nCr(n - j, k - i), ans %= mod;
        }
        ans %= mod;
    }
    cout << ans % mod << '\n';

    ll flag = 0, cirr;
    for(ll i = k; i >= 1; i--){
        chk2[arr[i]] = 1;
        for(ll j = arr[i]; j <= n; j++){
            if(chk2[j] == 0){
                arr[i] = j;
                flag = 1;
                cirr = i;
                break;
            }
        }
        if(flag) break;
    }
    for(ll i = 1; i <= cirr; i++){
        chk3[arr[i]] = 1;
        cout << arr[i] << ' ';
    }
    ll curr = k - cirr;
    for(ll i = arr[cirr]; i <= n; i++){
        if(curr == 0) break;
        if(chk3[i] == 0){
            curr--;
            cout << i << ' ';
        }
    }
    return 0;
}
